@namespace Quartermaster.Components
@using Quartermaster.Models
@inject HttpClient Http
@inject QuartermasterAPI API

<div class="list-wrapper">
@if (!loaded) {
<p>Lastar inn v√•re ting...</p>
} else {
    foreach (var category in Categories) {
        <CategoryView Model=@category />
    }
<AddButton callback=@AddCategory />
}
</div>

@code {
    [Parameter]
    public string? Token { get; set; }

    public bool loaded = false;
    public List<Thing>? Things { get; set; } = null;
    public List<Category>? Categories { get; set; } = null;

    public string Server = "http://localhost:8000/quartermaster/";

    protected override async Task OnInitializedAsync() {
        API.Initialize(Server, Http);

        Things = await Http.GetFromJsonAsync<List<Thing>?>(Server + "api/things/");

        Categories = await Http.GetFromJsonAsync<List<Category>?>(Server + "api/categories/");
        Categories.ForEach(
            c => {
                c.Things = new List<Thing>();
                Things.ForEach(
                    t => {
                        if (t.CategoryId == c.Id) {
                            c.Things.Add(t);
                        }
                    }
                );
            }
        );
        loaded = true;
        StateHasChanged();
    }

    private async Task AddCategory(int value) {
        Category category = new Category { Id=0, Name="Ny kategori"};
        var new_category = await API.AddCategory(category);
        new_category.Things = new List<Thing>();
        Categories.Add(new_category);
        return;
    }
}
