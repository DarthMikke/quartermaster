@namespace Quartermaster.Components
@using Quartermaster.Models
@inject QuartermasterAPI API

<div class="category">
    <div class="controls-left">
        <button class=@("btn " + className) type="button" @onclick="ToggleCollapsed"><i class="bi bi-caret-down-fill"></i></button>
    </div>
    <div class="content">
        @if (editing) {
            <button class="btn" @onclick="ToggleEditing"><i class="bi bi-check"></i></button>
            <input @bind="Model.Name" type="text"></input>
        } else {
            <span @onclick="ToggleEditing">@Model.Name</span>
        }

    </div>
    <div class="controls-right">
        <button class="btn" type="button"
        @onclick="AddThing"
        ><i class="bi bi-plus-circle"></i></button>
        <button class="btn" type="button"><i class="bi bi-three-dots-vertical"></i></button>
    </div>
</div>
@if (!Collapsed) {
@foreach (var currentThing in @Model.Things) {
    <ThingView thing=@currentThing />
}
@if (@Model.Things.Count == 0) {
    <div class="empty-list">
        <div class="empty-list-icon">
            <i class="bi bi-box-empty"></i>
        </div>
        <div class="empty-list-text">
            <p>No things in this category.</p>
        </div>
    </div>
}
}

@code {
    [Parameter]
    public Category Model { get; set; }

    private bool Collapsed = true;
    private string className {
        get => Collapsed ? "collapsed" : "";
    }

    private bool editing = false;

    private void ToggleCollapsed() {
        Collapsed = !Collapsed;
    }

    private async Task ToggleEditing() {
        editing = !editing;
        if (!editing) {
            Console.WriteLine("Saving changes to the category.");
        }
    }

    private async Task AddThing() {
        var thing = new Thing(Model.Id);
        thing = await API.AddThing(thing);
        this.Model.AddThing(thing);
        Console.WriteLine(this.Model.Things?.Count());
        StateHasChanged();
    }
}
